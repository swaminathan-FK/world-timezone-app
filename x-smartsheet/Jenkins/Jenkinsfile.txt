pipeline {
  agent any
  stages {
             stage('Build and Deploy to Standalone Server'){ 
		 
		     steps {
		       script{
		       
		        //defining environment variables based on the opted environment from the job
		        
		        def deployenv =params.ENVIRONMENT_TO_DEPLOY
		        def versionv = deployenv+'_DEPLOY_MULE_VERSION'
		        def targetserverv=deployenv+'_DEPLOY_TARGET_SERVER'
		        def deployusernamev= deployenv+'_DEPLOY_ANYPOINT_USERNAME'
		        def deploypasswordv=deployenv+'_DEPLOY_ANYPOINT_PASSWORD'
		        def anypointurlv=deployenv+'_DEPLOY_ANYPOINT_URL'
		        def muledeployenvv = deployenv+'_DEPLOY_ENV_NAME'
				
	
		        
                //Assigning respective variables for deployment
                def version = env."${versionv}"
                def targetserver=env."${targetserverv}"
                def deployusername=env."${deployusernamev}"
                def deploypassword=env."${deploypasswordv}"
                def anypointurl=env."${anypointurlv}"
                def muledeployenv = env."${muledeployenvv}"

				
				//Getting Application specific variable from config.json 
                def buildConfig = readJSON file: 'Jenkins/config.json'
		        def mulekey = buildConfig."${deployenv}".APP_MULEKEY
		        def muleenv = buildConfig."${deployenv}".ENV
				

				//MUNIT_CONFIG
				def munit_runtimev = deployenv +'_DEPLOY_MUNIT_RT_VERSION'
				def munit_runtime = env."${munit_runtimev}"
				
				//MUNIT_TEST_CHECK
				def munit_test = params.MUNIT_CHECK
				def skiptest = "-DskipMunitTests"
				if(munit_test == true)
				skiptest = "-Dmunit_runtime="+munit_runtime
				
		        
                sh """mvn --settings settings.xml clean package -Dmule_key=${mulekey} -Dmule_env=${muleenv} ${skiptest}"""
				//-DmuleDeploy -Dmule.version=${version} -Dtarget_server=${targetserver}   -Dusername=${deployusername}   -Dpassword=${deploypassword}
				//-Denv=${muledeployenv}  -Durl=${anypointurl}"""
               

		        }
		        }
	         }
	   }
}
